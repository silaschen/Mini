<?php 
/**
* 会员系统
*/
class UserAction extends CommonAction
{
	#会员列表#
	public function userlist(){
		$this->IsAdm(true);
		if (IS_GET) {
			$this->eq = "会员管理";
			$this->title = "会员列表";
			$word = I('word');
			$type = I('type');
			$openid = I('openid');
			$p = I('p',1);
			$map = array();
			$map['status'] = array('EGT',0);
			if($type != ''){
				$map['type'] = $type;
			}else{
				$map['type'] = array('EGT',0);
			}
			if($openid) $map['openid'] = $openid;
			if($word) $map['nickname|tel'] = array('like',"%".$word."%");
			import('@.ORG.Util.Page');
			$model = M('user_list');
			$list = $model->where($map)->order('type desc,addtime desc')->page($p.',15')->select();
			$this->assign('list',$list);
			$count	= $model->where($map)->count();// 查询满足要求的总记录数
			$this->total = $count;
			$page 	= new Page($count,15);// 实例化分页类 传入总记录数和每页显示的记录数
			$page->setConfig('theme','%upPage%  %linkPage%  %downPage%');
			$page->rollPage = 5 ;
			$show	= $page->show();// 分页显示输出
			$this->assign('page',$show);// 赋值分页输出
			//分页跳转的时候保证查询条件
			foreach($map as $key=>$val) {
				$page->parameter   .=   "$key=".urlencode($val).'&';
			}
			$this->display();
		}else{
			$uid = I('id');
			$type = I('t');
			if($type == 1){
				$r = M('user_list')->where(array('id'=>$uid))->setField('type',1);
			}else{
				//撤销其他
				M('user_list')->where(array('type'=>3))->setField('type',1);
				$r = M('user_list')->where(array('id'=>$uid))->setField('type',3);
			}
			if($r){
				json('操作成功',1);
			}else{
				json('操作失败');
			}

		}

	}

	#审核列表#
	public function applylist(){
		$this->IsAdm(true);
		if(IS_GET){
			$this->eq = "会员管理";
			$this->title = "审核列表";
			$word = I('word');
			$p = I('p',1);
			$status  = I('status');
			$map = array();
			if($status != ''){
				$map['a.status'] = $status;
			}else{
				$map['a.status'] = array('EGT',0);
			}
			if($word) $map['a.name|a.tel|b.nickname'] = array('like',"%".$word."%");
			import('@.ORG.Util.Page');
			$model = M('recommend_list');
			$list = $model->alias('a')
			->join('bingo_user_list b ON a.openid=b.openid')
			->where($map)
			->order('a.addtime desc')
			->page($p.',15')
			->field('a.id,a.name,a.tel,a.addtime,a.status,a.openid,b.nickname,b.headimgurl,a.donetime')
			->select();
			$this->assign('list',$list);
			$count	=  $model->alias('a')
			->join('bingo_user_list b ON a.openid=b.openid')
			->where($map)->count();// 查询满足要求的总记录数
			$this->total = $count;
			$page 	= new Page($count,15);// 实例化分页类 传入总记录数和每页显示的记录数
			$page->setConfig('theme','%upPage%  %linkPage%  %downPage%');
			$page->rollPage = 5 ;
			$show	= $page->show();// 分页显示输出
			$this->assign('page',$show);// 赋值分页输出
			//分页跳转的时候保证查询条件
			foreach($map as $key=>$val) {
				$page->parameter   .=   "$key=".urlencode($val).'&';
			}
			$this->display();
		}else{
			//审核
			$data = I('post.');
			$info = M('recommend_list')->where(array('id'=>$data['id'],'status'=>1))->find();
			if(!$info) json('申请信息有误');
			$r = M('recommend_list')->where(array('id'=>$data['id'],'status'=>1))->save(array('remark'=>$data['remark'],'status'=>$data['res'],'donetime'=>NOW_TIME));
			$usertype = M('user_list')->where(array('openid'=>$info['openid']))->getField('type');
			if($r){
				if($data['res'] == 2){
					//生成唯一推荐码
					$save['recode'] = $this->MakeRecommend($info);
					if($usertype == 1){
						$save['type'] = 2;
					}
					$flag = M('user_list')->where(array('openid'=>$info['openid']))->save($save);
					if($flag){
						json('审核已通过',1);
					}
				}else{
					json('操作成功',1);
				}
			}else{
				json('审核失败',1);
			}

		}
	}


	#生成推荐码#
	protected function MakeRecommend($data){
		//随机数3位
		$rand1 = mt_rand(1000,9999);
		//随机取3位
		$code = md5($data['openid'].$data['tel'].$data['addtime']);
		$uid = M('user_list')->where(array('openid'=>$data['openid']))->getField('id');
		$rand2 = substr(strval($uid+100), 1,2);
		return $rand2.$rand1;
	}


}


 ?>